{"version":3,"file":"app3d-three-template.js","sources":["ng://app3d-three-template/lib/render.service.ts","ng://app3d-three-template/lib/app3d-three-template.service.ts","ng://app3d-three-template/lib/app3d-three-template.component.ts","ng://app3d-three-template/lib/my-service.service.ts","ng://app3d-three-template/lib/app3d-three-template.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport abstract class RenderService {\r\n  //implement for create objects in scene\r\n  abstract createObjects(scene: THREE.Scene, renderer: THREE.WebGLRenderer, canvas: HTMLCanvasElement, camera: THREE.PerspectiveCamera, light: THREE.AmbientLight);\r\n  //{\r\n  //this.axesHelper = new THREE.AxesHelper( 200 );\r\n  //this.scene.add( this.axesHelper );\r\n\r\n  //this.camera.lookAt(0,0,0);\r\n  //}\r\n\r\n  //implement for render animation of objects\r\n  abstract renderObjects(scene: THREE.Scene, renderer: THREE.WebGLRenderer, canvas: HTMLCanvasElement, camera: THREE.PerspectiveCamera, light: THREE.AmbientLight);\r\n  //{\r\n  //this.axesHelper.rotateX(0.01);\r\n  //this.axesHelper.rotateY(0.001);\r\n  //this.axesHelper.rotateZ(0.005);\r\n\r\n  //this.camera.lookAt(this.axesHelper.position);\r\n  //}\r\n}","import * as THREE from 'three';\r\nimport { Injectable, ElementRef, OnDestroy, NgZone } from '@angular/core';\r\nimport { RenderService } from './render.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class EngineApp3dThreeTemplateService implements OnDestroy {\r\n\r\n  private canvas: HTMLCanvasElement;\r\n  private renderer: THREE.WebGLRenderer;\r\n  private camera: THREE.PerspectiveCamera;\r\n  private scene: THREE.Scene;\r\n  private light: THREE.AmbientLight;\r\n\r\n  private frameId: number = null;\r\n\r\n  public constructor(\r\n    private ngZone: NgZone,\r\n    private renderService: RenderService) {}\r\n\r\n  public ngOnDestroy() {\r\n    if (this.frameId != null) {\r\n      cancelAnimationFrame(this.frameId);\r\n    }\r\n  }\r\n\r\n  createScene(canvas: ElementRef<HTMLCanvasElement>): void {\r\n\r\n    this.canvas = canvas.nativeElement;\r\n\r\n    this.renderer = new THREE.WebGLRenderer({\r\n      canvas: this.canvas,\r\n      alpha: true,\r\n      antialias: true\r\n    });\r\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n\r\n    this.scene = new THREE.Scene();\r\n\r\n    this.camera = new THREE.PerspectiveCamera(55.0, window.innerWidth / window.innerHeight, 0.5, 3000000);\r\n\t\tthis.camera.position.set(200, 200, 200);\r\n    \r\n    this.light = new THREE.AmbientLight( 0x404040 );\r\n    this.light.position.z = 10;\r\n    this.scene.add(this.light);\r\n\r\n    this.createObjects();\r\n\r\n  }\r\n  \r\n  createObjects() {\r\n    if(this.renderService) {\r\n      this.renderService.createObjects(this.scene, this.renderer, this.canvas, this.camera, this.light);\r\n    }\r\n  }\r\n  \r\n  renderObjects() {\r\n    if(this.renderService) {\r\n      this.renderService.renderObjects(this.scene, this.renderer, this.canvas, this.camera, this.light);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    this.frameId = requestAnimationFrame(() => {\r\n      this.render();\r\n    });\r\n\r\n    this.renderObjects();\r\n\r\n    this.renderer.render(this.scene, this.camera);\r\n  }\r\n\r\n  animate(): void {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      if (document.readyState !== 'loading') {\r\n        this.render();\r\n      } else {\r\n        window.addEventListener('DOMContentLoaded', () => {\r\n          this.render();\r\n        });\r\n      }\r\n\r\n      window.addEventListener('resize', () => {\r\n        this.resize();\r\n      });\r\n    });\r\n  }\r\n\r\n  resize() {\r\n    const width = window.innerWidth;\r\n    const height = window.innerHeight;\r\n\r\n    this.camera.aspect = width / height;\r\n    this.camera.updateProjectionMatrix();\r\n\r\n    this.renderer.setSize( width, height );\r\n  }\r\n\r\n}\r\n","import { Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { EngineApp3dThreeTemplateService } from './app3d-three-template.service';\r\n\r\n@Component({\r\n  selector: 'app3d-three-template',\r\n  template: `\r\n    <div class=\"engine-wrapper\">\r\n      <canvas #rendererCanvas id=\"renderCanvas\"></canvas>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./app3d-three-template.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class App3dThreeTemplateComponent implements OnInit {\r\n\r\n  @ViewChild('rendererCanvas', { static: true })\r\n  public rendererCanvas: ElementRef<HTMLCanvasElement>;\r\n\r\n  constructor(private engServ: EngineApp3dThreeTemplateService) { }\r\n\r\n  ngOnInit() {\r\n    this.engServ.createScene(this.rendererCanvas);\r\n    this.engServ.animate();\r\n  }\r\n\r\n}\r\n","import * as THREE from 'three';\r\nimport { Injectable } from '@angular/core';\r\nimport { RenderService } from './render.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MyRenderService implements RenderService {\r\n\r\n    private axesHelper: THREE.AxesHelper;\r\n    \r\n    //implement for create objects in scene\r\n    createObjects(scene: THREE.Scene, renderer: THREE.WebGLRenderer, canvas: HTMLCanvasElement, camera: THREE.PerspectiveCamera, light: THREE.AmbientLight) {\r\n        this.axesHelper = new THREE.AxesHelper( 200 );\r\n        scene.add( this.axesHelper );\r\n    \r\n        camera.lookAt(0,0,0);\r\n    }\r\n\r\n    //implement for render animation of objects\r\n    renderObjects(scene: THREE.Scene, renderer: THREE.WebGLRenderer, canvas: HTMLCanvasElement, camera: THREE.PerspectiveCamera, light: THREE.AmbientLight) {\r\n      this.axesHelper.rotateX(0.01);\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { App3dThreeTemplateComponent } from './app3d-three-template.component';\r\nimport { MyRenderService } from './my-service.service';\r\nimport { RenderService } from './render.service';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [App3dThreeTemplateComponent],\r\n  imports: [CommonModule],\r\n  providers: [{ provide: RenderService, useClass: MyRenderService }],\r\n  exports: [App3dThreeTemplateComponent]\r\n})\r\nexport class App3dThreeTemplateModule { }\r\n"],"names":["THREE.WebGLRenderer","THREE.Scene","THREE.PerspectiveCamera","THREE.AmbientLight","THREE.AxesHelper"],"mappings":"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"}